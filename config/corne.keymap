/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_lock {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        equal {
            bindings = <&kp KP_EQUAL>;
            key-positions = <6 7>;
        };

        minus {
            bindings = <&kp KP_SUBTRACT>;
            key-positions = <18 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 31>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <34 33>;
        };

        squote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <31 32>;
        };

        dquote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <19 20>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <40 19 8>;
        };

        et {
            bindings = <&kp RA(E)>;
            key-positions = <3 4>;
        };

        est {
            bindings = <&kp RA(GRAVE)>;
            key-positions = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W           &kp E        &kp R             &kp T         &kp Y      &kp U              &kp I        &kp O            &kp P                    &none
&none  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LCTRL D  &hm LEFT_SHIFT F  &lt 4 G       &kp H      &hm RIGHT_SHIFT J  &hm RCTRL K  &hm RIGHT_ALT L  &hm RIGHT_GUI SEMICOLON  &none
&none  &kp Z           &kp X           &lt 2 C      &lt 5 V           &lt 1 B       &kp N      &kp M              &kp COMMA    &kp DOT          &kp FSLH                 &none
                                       &kp ESCAPE   &kp BACKSPACE     &kp DELETE    &kp ENTER  &kp SPACE          &kp TAB
            >;
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans           &kp KP_NUMBER_0
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_TOG    &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &ext_power EP_TOG  &trans           &kp C_MUTE       &kp C_VOL_DN     &kp C_VOLUME_UP  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &out OUT_TOG       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &trans
                        &trans  &trans  &trans    &trans             &trans           &trans
            >;
        };

        mod {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        arrow {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans        &trans           &trans  &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };

        symbols {
            bindings = <
&kp EXCL  &trans  &trans  &trans  &trans  &trans    &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans
&trans    &trans  &trans  &trans  &trans  &trans    &kp GRAVE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans
&trans    &trans  &trans  &trans  &trans  &trans    &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans
                          &trans  &trans  &trans    &trans     &trans                &trans
            >;
        };
    };
};
